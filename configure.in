AC_INIT(binio,1.0)
AC_CONFIG_SRCDIR(src/binio.cpp)
AC_CONFIG_FILES([Makefile src/Makefile doc/Makefile src/binio.h])
AM_INIT_AUTOMAKE
AM_CONFIG_HEADER(src/config.h)
AM_MAINTAINER_MODE
AM_PROG_LIBTOOL
AC_LANG(C++)

# Check for a sane C/C++ build environment.
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_CXX

# Check if 'long long' or 'long double' are available and use them instead.
AC_CHECK_TYPE(long long, AC_SUBST(TYPE_INT,"long long"),
		   AC_SUBST(TYPE_INT,long))
AC_CHECK_TYPE(long double, AC_SUBST(TYPE_FLOAT,"long double"),
		   AC_SUBST(TYPE_FLOAT,double))

# Conditionally build iostream wrappers
AC_ARG_WITH([iostream],AC_HELP_STRING([--without-iostream],
	[Do not try to build iostream wrappers]))

if test ${with_iostream:=yes} = yes; then
   AC_CHECK_LIB(stdc++,main,
	AC_SUBST(WITH_IOSTREAM,1),
	AC_MSG_ERROR([libstdc++ not installed - iostream wrappers disabled])
	AC_SUBST(WITH_IOSTREAM,0))
else
	AC_SUBST(WITH_IOSTREAM,0)
fi

# Conditionally build std::string methods
AC_ARG_WITH([string],AC_HELP_STRING([--without-string],
	[Do not try to build std::string methods]))

if test ${with_string:=yes} = yes; then
   AC_CHECK_LIB(stdc++,main,
	AC_SUBST(WITH_STRING,1),
	AC_MSG_ERROR([libstdc++ not installed - std::string methods disabled])
	AC_SUBST(WITH_STRING,0))
else
	AC_SUBST(WITH_STRING,0)
fi

# Check if we are using the ISO standard C++ library
AC_ARG_WITH([iso],AC_HELP_STRING([--with-iso],
	[Build with ISO C++ standard library compliance]))

if test x${with_iso} = xyes; then
   AC_SUBST(ISO_STDLIB,1)
elif test x${with_iso} = xno; then
   AC_SUBST(ISO_STDLIB,0)
else
	AC_CHECK_TYPE([std::basic_istream<char>],
		AC_SUBST(ISO_STDLIB,1),
		AC_SUBST(ISO_STDLIB,0),
		[#include <iostream>])
fi

AC_OUTPUT
