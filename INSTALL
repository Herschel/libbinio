Installation:
-------------
Refer to the appropriate INSTALL files for your build system:

INSTALL.unix    All UNIX builds, including cygwin
INSTALL.win32   Microsoft Visual C++ builds
INSTALL.dos     WATCOM C/C++ builds

Appendix to 'INSTALL.dos':
--------------------------
The build instructions of the WATCOM build are generic and generated
automatically. They assume that the main Makefile would be called 'Makefile'.
This isn't the case for AdPlug's WATCOM build! AdPlug's WATCOM Makefile is
called 'Makefile.wat'. Thus, you have to give the commandline option
'/f Makefile.wat' every time you run a 'wmake' command. For example, to
install AdPlug, call wmake like this:

wmake /f Makefile.wat install

Do this similary with any other 'wmake' target.

CVS and UNIX:
-------------
If you checked out from CVS and use UNIX, first run:

autoreconf --install

to generate the build cruft and get the configure script. You need recent
versions of autoconf, automake and libtool to do this.

CVS and DOS or Windows:
-----------------------
If you checked out from CVS and use DOS or Windows, you first have to copy
the file 'binio.h.in' to 'binio.h' in the 'src' subdirectory.

Extra setup for DOS and Windows builds:
---------------------------------------
After you've done all steps from 'INSTALL.dos' or 'INSTALL.win32', you have
to copy the file 'binio.h.in' to 'binio.h' (maybe overwriting it) in the
'src' subdirectory and then open it ('binio.h'). Set all #define's in the
configuration section of the file to your preferred settings. All items are
documented.

Next, insert appropriately sized standard types for all remaining @TYPE_*@
occurences. For example, for all systems based on i386 and up, this section
looks like this:

  typedef char		Byte;		// 8 bit
  typedef short		Word;		// 16 bit
  typedef int		DWord;		// 32 bit
  typedef long long	QWord;		// 64 bit
  typedef float		Float;		// 32 bit
  typedef double	Double;		// 64 bit
  typedef long double	LDouble;	// 96 bit

This is most likely also what you want.

If your system or compiler doesn't support any of the required types,
insert 'void' instead. This will effectively disable all functionality for
types of this size.
